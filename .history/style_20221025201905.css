@import url("https://fonts.googleapis.com/css2?family=Be+Vietnam+Pro:wght@400;500;700&display=swap");
:root {
  --clr-accent-400: hsl(12, 88%, 59%);
  --clr-accent-300: hsl(12, 88%, 75%);
  --clr-accent-500: hsl(12, 88%, 40%);
  --clr-accent-100: hsl(13, 100%, 96%);
  --clr-primary-400: hsl(228, 39%, 23%);
  --clr-neutral-100: hsl(232, 12%, 13%);
  --clr-neutral-900: hsl(0 0% 0%);
  --ff-primary: "Be Vietnam Pro", sans-serif;
  --ff-body: var(--ff-primary);
  --ff-heading: var(--ff-primary);
  --fw-regular: 400;
  --fw-semibold: 500;
  --fw-bold: 700;
  /*fontsizes*/
  --fs-300: 0.8125rem;
  --fs-400: 0.875rem;
  --fs-500: 0.9375rem;
  --fs-600: 1rem;
  --fs-700: 1.875rem;
  --fs-800: 2.5rem;
  --fs-900: 3.5rem;

  --fs-body: var(--fs-400);
  --fs-primary-heading: var(--fs-800);
  --fs-secondary-heading: var(--fs-700);
  --fs-nav: var(--fs-500);
  --fs-button: var(--fs-300);
  /* vertical spaces */
  --size-100: 0.25rem;
  --size-200: 0.5rem;
  --size-300: 0.75rem;
  --size-400: 1rem;
  --size-500: 1.5rem;
  --size-600: 2rem;
  --size-700: 3rem;
  --size-800: 4rem;
  --size-900: 5rem;
}
/*for desktop*/
@media (min-width: 50em) {
  :root {
    --fs-primary-heading: var(--fs-900);
    --fs-secondary-heading: var(--fs-800);
    --fs-body: var(--fs-500);
    --fs-nav: var(--fs-300);
  }
}
/* Box sizing rules */
*,
*::before,
*::after {
  box-sizing: border-box;
}

* {
  margin: 0;
  padding: 0;
  font: inherit;
}

/* Remove list styles on ul, ol elements with a list role, which suggests default styling will be removed */
ul[role="list"],
ol[role="list"] {
  list-style: none;
}

/* Set core root defaults */
html:focus-within {
  scroll-behavior: smooth;
}
html,
body {
  height: 100%;
}
/* Set core body defaults */
body {
  text-rendering: optimizeSpeed;
  line-height: 1.5;
}

/* A elements that don't have a class get default styles */
a:not([class]) {
  text-decoration-skip-ink: auto;
}

/* Make images easier to work with */
img,
picture,
svg {
  max-width: 100%;
  display: block;
}

/* Remove all animations, transitions and smooth scroll for people that prefer not to see them */
@media (prefers-reduced-motion: reduce) {
  html:focus-within {
    scroll-behavior: auto;
  }

  *,
  *::before,
  *::after {
    animation-duration: 0.01ms !important;
    animation-iteration-count: 1 !important;
    transition-duration: 0.01ms !important;
    scroll-behavior: auto !important;
  }
}

/* utility classes */
.text-primary-400 {
  color: var(--clr-primary-400);
}
.text-accent-100 {
  color: var(--clr-accent-100);
}
.text-accent-400 {
  color: var(--clr-accent-400);
}
.text-neutral-100 {
  color: var(--clr-neutral-100);
}
.text-neutral-900 {
  color: var(--clr-neutral-900);
  font-weight: var(--fw-bold);
}
/*bg colors utility classes*/
.bg-primary-400 {
  background-color: var(--clr-primary-400);
}
.bg-accent-100 {
  background-color: var(--clr-accent-100);
}
.bg-accent-400 {
  background-color: var(--clr-accent-400);
}
.bg-neutral-100 {
  background-color: var(--clr-neutral-100);
}
.bg-neutral-900 {
  background-color: var(--clr-neutral-900);
}
.fw-bold {
  font-weight: var(--fw-bold);
}
.fw-semibold {
  font-weight: var(--fw-semibold);
}
.fw-regular {
  font-weight: var(--fw-regular);
}
/*fontsizes*/
.fs-primary-heading {
  font-size: var(--fs-primary-heading);
  line-height: 1.1;
}
.fs-secondary-heading {
  font-size: var(--fs-secondary-heading);
  line-height: 1.1;
}
.fs-300 {
  font-size: var(--fs-300);
}
.fs-400 {
  font-size: var(--fs-400);
}
.fs-500 {
  font-size: var(--fs-500);
}
.fs-600 {
  font-size: var(--fs-600);
}

/* padding utility classes */
.padding-block-900 {
  padding-block: var(--size-900);
}
.padding-block-700 {
  padding-block: var(--size-700);
}
/* general styling */
.container {
  --max-width: 69.375em;
  --margin: 1em;
  width: min(var(--max-width), 100% - var(--margin) * 2);
  margin-inline: auto;
}
body {
  font-size: var(--fs-body);
  font-family: var(--ff-body);
  color: var(--clr-primary-400);
}
.even-columns {
  display: grid;
  gap: 1rem;
}
.button {
  /* 100vmax is just a big number */
  border-radius: 100vmax;
  padding: 1.25em 2.5em;
  font-weight: var(--fw-bold);
  text-decoration: none;
  border: 0;
  line-height: 1;
  font-size: var(--fs-button);
  color: var(--clr-accent-100);
  background-color: var(--clr-accent-400);
  cursor: pointer;
  box-shadow: 0 1.25em 1em -1em var(--clr-accent-500);
}
.button:hover,
.button:focus-visible {
  background-color: var(--clr-accent-300);
}
.button[data-type="inverted"] {
  background-color: var(--clr-accent-100);
  color: var(--clr-accent-400);
}
.button[data-type="inverted"]:hover,
.button[data-type="inverted"]:focus-visible {
  background-color: var(--clr-accent-100);
  color: var(--clr-accent-300);
}

/*navgation style*/
.visually-hidden {
  position: absolute;
  width: 1px;
  height: 1px;
  margin: -1px;
  border: 0;
  padding: 0;
  white-space: nowrap;
  clip-path: inset(100%);
  clip: rect(0 0 0 0);
  overflow: hidden;
}

.primary-header {
  margin-top: var(--size-700);
}
.nav-wrapper {
  display: flex;
  align-items: center;
  justify-content: space-between;
}

.mobile-nav-toggle {
  display: none;
}
.nav-list {
  font-size: var(--fs-nav);
  display: flex;
  list-style: none;
  gap: clamp(var(--size-500), 5vw, var(--size-700));
  font-weight: var(--fw-semibold);
}
.nav-list a {
  text-decoration: none;
  color: var(--clr-primary-400);
}

.nav-list a:hover,
.nav-list a:focus {
  color: var(--clr-accent-400);
}
/*select all p except p that has class*/
p:not([class]) {
  opacity: 0.7;
  max-width: 32ch;
}
p[data-width="wide"] {
  max-width: 45ch;
}
.cta {
  text-align: center;
}
/*for mobile*/
@media (max-width: 50em) {
  .primary-navigation {
    display: none;
    position: absolute;
    z-index: 10;
    inset: 7rem var(--size-400) auto;
    max-width: 45rem;
    margin-inline: auto;
    background-color: white;
    border-radius: var(--size-100);
  }
  .cta {
    text-align: left;
  }
  .nav-list {
    display: grid;
    gap: var(--size-600);
    text-align: center;
    list-style: none;
    font-weight: var(--fw-bold);
    padding: var(--size-700);
  }

  .primary-navigation[data-visible] {
    display: block;
  }
  .primary-header[data-overlay]::after {
    content: "";
    z-index: 5;

    position: fixed;
    /* height: 100%; */
    inset: 0;
    background-image: linear-gradient(rgb(0 0 0/0), rgb(0 0 0/0.8));
  }
  .mobile-nav-toggle {
    position: absolute;
    z-index: 16;
    top: var(--size-500);
    right: var(--size-400);
    display: block;
    background-color: transparent;
    border: none;
    cursor: pointer;
    padding: 0.5em;
  }
  .mobile-nav-toggle .icon-close {
    display: none;
  }
  .hidden {
    display: none;
  }
}
.align-items-center {
  align-items: center;
}
.cta {
  position: relative;
  /* creating stacking context */
  isolation: isolate;
}
.cta::before {
  content: "esraa";
  position: absolute;
  inset: 0;
  z-index: -1;
  background-image: url("images/bg-tablet-pattern.svg"),
    url("images/bg-tablet-pattern.svg");
  background-repeat: no-repeat;
  background-position: -15rem -5rem, 45rem -10rem;
  opacity: 0.2;
}
/* this css rule is better than .flow :not(:first-child) 
 because the second rule is hard to be overriden */
/* equivalent to :where(.flow:not(:first-child)) it will have zero specifity */
:where(.flow :not(:first-child)) {
  margin-top: var(--flow-spacer, 2.7em);
}

/*for desktop screen size*/
@media (min-width: 50em) {
  .even-columns {
    grid-auto-flow: column;
    grid-auto-columns: 1fr;
  }

  .nav-list a {
    transition: all ease-in-out 0.5s;
  }
  .nav-list a::after {
    content: "";
    display: block;
    height: 3px;
    background: var(--clr-accent-400);
    opacity: 0;
    transition: all ease-out 0.5s;
  }

  .nav-list a:hover::after {
    opacity: 1;
  }
  .justify-self-end {
    justify-self: end;
  }
}
